install.packages(c("Rivivc", "ivivc", "ggplot2"))
q()
setwd("~/Dokumenty/Coursera/Reproducible Research/peerassing1")
is.na(df)
df<- read.csv(file="activity.csv")
df$date<- as.Date(df$date)
summary(df)
is.na(df$steps)
steps.sum <- tapply(df$steps, df$date, sum)
steps.sum.na <- steps.sum[!is.na(steps.sum)]  #omitting NA values
hist(steps.sum.na, main="histogram | total number of steps taken each day", xlab="Number of steps per day")
mean.steps <- mean(steps.sum.na)
median.steps <- median(steps.sum.na)
steps.sum.na <- steps.sum  #omitting NA values
mean.steps
median.steps
mean.steps <- mean(steps.sum.na)
median.steps <- median(steps.sum.na)
mean.steps
median.steps
steps.sum <- tapply(df$steps, df$date, sum)
steps.sum.na <- steps.sum[!is.na(steps.sum)]  #omitting NA values
hist(steps.sum.na, main="histogram | total number of steps taken each day", xlab="Number of steps per day")
mean.steps <- mean(steps.sum.na)
median.steps <- median(steps.sum.na)
df.na <- df[!is.na(df$steps),]
days.df<- split(df, df$date)
steps.sum
steps.sum
tapply(days.df$steps, days.df$date, mean)
days.df$steps
tapply(df$steps, df$date, mean)
mean.in.day <- tapply(df$steps, df$date, mean)
for (i in 1:length(days.df)) {
for (j in 1:length(days.df[[i]]$steps)) {
if (is.na(days.df[[i]]$steps[j])) {days.df[[i]]$steps[j] <- mean.in.day[i]}
}
{}
}
days.df
days.df<- split(df, df$date)
new.days.df <- days.df
days.df <- split(df, df$date)
for (i in 1:length(days.df)) {
for (j in 1:length(days.df[[i]]$steps)) {
if (is.na(days.df[[i]]$steps[j])) {new.days.df[[i]]$steps[j] <- mean.in.day[i]}
}
}
new.days.df
summary(new.days.df)
str(new.days.df)
data.frame(new.days.df)
as.data.frame(new.days.df)
for (i in 1:length(new.days.df)) {
data.frame(new.days.df[[i]])
}
for (i in 1:length(new.days.df)) {
new<- data.frame(new.days.df[[i]])
}
new
new<-data.frame()
for (i in 1:length(new.days.df)) {
new<- data.frame(new.days.df[[i]], new)
}
1:(length(new.days.df)-1)
length(new.days.df)
new<-data.frame(new.days.df[[1]])
for (i in 1:(length(new.days.df)-1)) {
new<- data.frame(new.days.df[[i+1]], new)
)
new<-data.frame(new.days.df[[1]])
for (i in 1:(length(new.days.df)-1)) {
new<- data.frame(new.days.df[[i+1]], new)
}
new
new<-data.frame(new.days.df[[1]])
for (i in 1:(length(new.days.df)-1)) {
new<- rbind(new.days.df[[i+1]], new)
}
new
tail(new)
new <- new[!is.na(new$steps),]
new<-data.frame(new.days.df[[1]])
for (i in 1:(length(new.days.df)-1)) {
new<- rbind(new.days.df[[i+1]], new)
}
new.df <- new[!is.na(new$steps),]
new.df
hist(new.df, main="histogram | total number of steps taken each day", xlab="Number of steps per day")
new.df.sum <- tapply(new.df$steps, new.df$date, sum)
hist(new.df.sum, main="histogram | total number of steps taken each day", xlab="Number of steps per day")
hist(steps.sum.na, main="histogram | total number of steps taken each day", xlab="Number of steps per day")
hist(new.df.sum, main="histogram | total number of steps taken each day", xlab="Number of steps per day")
new.df.sum
steps.sum.na
mean.in.day <- tapply(df$steps, df$date, median)
for (i in 1:length(days.df)) {
for (j in 1:length(days.df[[i]]$steps)) {
if (is.na(days.df[[i]]$steps[j])) {new.days.df[[i]]$steps[j] <- mean.in.day[i]}
}
}
new<-data.frame(new.days.df[[1]])
for (i in 1:(length(new.days.df)-1)) {
new<- rbind(new.days.df[[i+1]], new)
}
new.df <- new[!is.na(new$steps),]
new.df.sum <- tapply(new.df$steps, new.df$date, sum)
hist(new.df.sum, main="histogram | total number of steps taken each day", xlab="Number of steps per day")
hist(steps.sum.na, main="histogram | total number of steps taken each day", xlab="Number of steps per day")
for (i in 1:length(days.df)) {
for (j in 1:length(days.df[[i]]$steps)) {
if (is.na(days.df[[i]]$steps[j])) {new.days.df[[i]]$steps[j] <- 1}
}
}
new<-data.frame(new.days.df[[1]])
for (i in 1:(length(new.days.df)-1)) {
new<- rbind(new.days.df[[i+1]], new)
}
new.df <- new[!is.na(new$steps),]
new.df.sum <- tapply(new.df$steps, new.df$date, sum)
hist(new.df.sum, main="histogram | total number of steps taken each day", xlab="Number of steps per day")
for (i in 1:length(days.df)) {
for (j in 1:length(days.df[[i]]$steps)) {
if (is.na(days.df[[i]]$steps[j])) {new.days.df[[i]]$steps[j] <- mean.in.day[i]}
}
}
new<-data.frame(new.days.df[[1]])
for (i in 1:(length(new.days.df)-1)) {
new<- rbind(new.days.df[[i+1]], new)
}
new.df <- new[!is.na(new$steps),]
new.df.sum <- tapply(new.df$steps, new.df$date, sum)
hist(new.df.sum, main="histogram | total number of steps taken each day", xlab="Number of steps per day")
hist(steps.sum.na, main="histogram | total number of steps taken each day", xlab="Number of steps per day")
mean.new.df <- mean(new.df.sum)
median.new.df <- median(new.df.sum)
mean.new.df
median.new.df
mean.steps
median.steps
for (i in 1:length(days.df)) {
for (j in 1:length(days.df[[i]]$steps)) {
if (is.na(days.df[[i]]$steps[j])) {new.days.df[[i]]$steps[j] <- mean.in.day[i]+100}
}
}
new<-data.frame(new.days.df[[1]])
for (i in 1:(length(new.days.df)-1)) {
new<- rbind(new.days.df[[i+1]], new)
}
new.df <- new[!is.na(new$steps),]
new.df.sum <- tapply(new.df$steps, new.df$date, sum)
hist(new.df.sum, main="histogram | total number of steps taken each day", xlab="Number of steps per day")
mean.in.day <- tapply(df$steps, df$date, sum)
for (i in 1:length(days.df)) {
for (j in 1:length(days.df[[i]]$steps)) {
if (is.na(days.df[[i]]$steps[j])) {new.days.df[[i]]$steps[j] <- mean.in.day[i]}
}
}
new<-data.frame(new.days.df[[1]])
for (i in 1:(length(new.days.df)-1)) {
new<- rbind(new.days.df[[i+1]], new)
}
new.df <- new[!is.na(new$steps),]
new.df.sum <- tapply(new.df$steps, new.df$date, sum)
hist(new.df.sum, main="histogram | total number of steps taken each day", xlab="Number of steps per day")
mean.in.day <- tapply(df$steps, df$date, mean)
mean.in.day
for (i in 1:length(days.df)) {
for (j in 1:length(days.df[[i]]$steps)) {
if (is.na(days.df[[i]]$steps[j])) {new.days.df[[i]]$steps[j] <- mean.in.day[j]}
}
}
new<-data.frame(new.days.df[[1]])
for (i in 1:(length(new.days.df)-1)) {
new<- rbind(new.days.df[[i+1]], new)
}
new.df <- new[!is.na(new$steps),]
new.df.sum <- tapply(new.df$steps, new.df$date, sum)
hist(new.df.sum, main="histogram | total number of steps taken each day", xlab="Number of steps per day")
mean.new.df <- mean(new.df.sum)
median.new.df <- median(new.df.sum)
mean.new.df
median.new.df
mean.new.df-mean.steps
median.new.df-median.steps
mean.new.df
mean.steps
new.df
new.df$date   # dataframe with filled missing values
weekends(new.df$date)   # dataframe with filled missing values
weekend(new.df$date)   # dataframe with filled missing values
weekdays()
weekdays
help(weekdays)
weekdays(new.df$date)   # dataframe with filled missing values
Sys.setlocale(category = "LC_TIME", locale = "C")
weekdays(new.df$date)   # dataframe with filled missing values
week<- eekdays(new.df$date)   # dataframe with filled missing values
week
week<- eekdays(new.df$date)   # dataframe with filled missing values
week<- weekdays(new.df$date)   # dataframe with filled missing values
week
gsub(pattern="Mon|Tue|Wed|Thur|Fri", "Weekdays", week)
week<- weekdays(new.df$date)   # dataframe with filled missing values
gsub(pattern="Mon*|Tue*|Wed*|Thu*|Fri*", "Weekdays", week)
week<- weekdays(new.df$date)   # dataframe with filled missing values
gsub(pattern="Mon*|Tue*|Wed*|Thu*|Fri*", "Weekdays", week)
gsub("Mon*", "week", "Monday")
gsub("Mon", "week", "Monday")
gsub("T", "week", "Tuesday")
gsub("T*", "week", "Tuesday")
gsub("T*", "week", "Tuesday")
gsub("T[a-z]", "week", "Tuesday")
gsub("T*.", "week", "Tuesday")
unique(week)
weekdays<- unique(week)[1"5"]; weekend<- unique(week)[6:7]
weekdays<- unique(week)[1:5]; weekend<- unique(week)[6:7]
gsub(pattern=weekdays, "Weekdays", week)
days<- unique(week)
for (i in c(7,8)) { sub(days[1], "Weekend", week) }
week
for (i in 1:5) { sub(days[1], "Weekdays", week) }
for (i in c(7,8)) { sub(days[1], "Weekend", week) }
week
for (i in 1:5) { sub(days[i], "Weekdays", week) }
for (i in c(7,8)) { sub(days[i], "Weekend", week) }
week
for (i in 1:5) { gsub(days[i], "Weekdays", week) }
for (i in c(7,8)) { gsub(days[i], "Weekend", week) }
week
days[i]
days<- unique(week)
for (i in 1:5) { gsub(days[i], "Weekdays", week) }
for (i in c(7,8)) { gsub(days[i], "Weekend", week) }
week
days
class(days)
days[1]
for (i in 1:5) { gsub(days[i], "Weekdays", week) }
for (i in c(7,8)) { gsub(days[i], "Weekend", week) }
week
week[1:10]
gsub(days[i], "Weekend", week[1:5])
gsub(days[1], "Weekend", week[1:5])
for (i in 1:5) { week <- gsub(days[i], "Weekdays", week) }
week
for (i in c(7,8)) { week <- gsub(days[i], "Weekend", week) }
week
week<- weekdays(new.df$date)   # dataframe with filled missing values
days<- unique(week)
week
for (i in c(7,8)) { week <- gsub(days[i], "Weekend", week) }
week
week<- weekdays(new.df$date)   # dataframe with filled missing values
days<- unique(week)
for (i in 1:5) { week <- gsub(days[i], "Weekdays", week) }
for (i in c(6,7)) { week <- gsub(days[i], "Weekend", week) }
week
new.df$week <- week
new.df$week
new.df
str(new.df)
week
as.factor(week)
new.df$week <- as.factor(week)
str(new.df)
split(new.df, new.df$week)
splited[[1]]
splited <- split(new.df, new.df$week)
splited[[1]]
new.df.weekdays<- splited[[1]]; new.df.weekend<- splited[[2]];
noOfSteps.weekend
knit2html("")
setwd("~/Dokumenty/Coursera/Reproducible Research/peerassing1/RepData_PeerAssessment1")
knit2html("PA1.Rmd")
library(knitr)
knit2html("PA1.Rmd")
